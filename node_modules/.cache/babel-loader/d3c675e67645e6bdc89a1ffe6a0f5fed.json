{"ast":null,"code":"var _jsxFileName = \"/home/usermint/Desktop/dewetours/client/src/private/Private.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport LoginMod from \"../components/modals/LoginMod\";\nimport { UserContext } from \"../context/Contextusr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Private = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const token = localStorage.getItem(\"tokenkey\");\n  const [modlog, setModlog] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => token ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(LoginMod, {\n        handleShow: modlog,\n        handleClose: () => setModlog(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Private, \"zk0pCDtzH3yD2ivngfcL3zyAmwM=\");\n\n_c = Private;\nexport default Private;\n\nvar _c;\n\n$RefreshReg$(_c, \"Private\");","map":{"version":3,"sources":["/home/usermint/Desktop/dewetours/client/src/private/Private.jsx"],"names":["React","useState","useContext","Redirect","Route","LoginMod","UserContext","Private","component","Component","rest","token","localStorage","getItem","modlog","setModlog","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AACrD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAApC;AAEA,sBACE;AAAA,2BACE,QAAC,KAAD,OACMS,IADN;AAEE,MAAA,MAAM,EAAGM,KAAD,IACNL,KAAK,gBACH,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,cADG,gBAGH,QAAC,QAAD;AACE,QAAA,UAAU,EAAEF,MADd;AAEE,QAAA,WAAW,EAAE,MAAMC,SAAS,CAAC,KAAD;AAF9B;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiBD,CArBD;;GAAMR,O;;KAAAA,O;AAuBN,eAAeA,OAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport LoginMod from \"../components/modals/LoginMod\";\nimport { UserContext } from \"../context/Contextusr\";\n\nconst Private = ({ component: Component, ...rest }) => {\n  const token = localStorage.getItem(\"tokenkey\");\n  const [modlog, setModlog] = useState(true);\n\n  return (\n    <>\n      <Route\n        {...rest}\n        render={(props) =>\n          token ? (\n            <Component {...props} />\n          ) : (\n            <LoginMod\n              handleShow={modlog}\n              handleClose={() => setModlog(false)}\n            />\n          )\n        }\n      />\n    </>\n  );\n};\n\nexport default Private;\n"]},"metadata":{},"sourceType":"module"}
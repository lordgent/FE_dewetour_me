{"ast":null,"code":"var _jsxFileName = \"/home/usermint/Desktop/dewetours/client/src/components/modals/RegisterMod.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, Form, Alert } from \"react-bootstrap\";\nimport \"./modals.css\";\nimport icn from \"../../assets/icons/l2.png\";\nimport icns from \"../../assets/icons/l1.png\";\nimport swal from \"sweetalert\";\nimport { API } from \"../../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RegisterMod({\n  handleClose,\n  handleShow\n}) {\n  _s();\n\n  const [alert, setalert] = useState(null);\n  const [gender, setgender] = useState(null);\n  const [pass, setpass] = useState(null);\n\n  function getUser() {\n    let datas = localStorage.getItem(\"users\");\n\n    if (datas) {\n      return JSON.parse(datas);\n    } else {\n      return [];\n    }\n  }\n\n  const [datausers, setdatausers] = useState(getUser());\n  const [form, setform] = useState({\n    fullname: \"\",\n    nophone: \"\",\n    gender: \"\",\n    address: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setform({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const body = JSON.stringify(form);\n      const response = await API.post(\"/signup\", body, config);\n      console.log(response);\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        const msg = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: \"Register is Success!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);\n\n        setalert(msg);\n      }\n    } catch (error) {\n      console.log(error.response.data);\n\n      if (error.response.data.message) {\n        const msg = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: \"Email is Already\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this);\n\n        setalert(msg);\n      } else if (error.response.data.error.message === '\"gender\" is not allowed to be empty') {\n        const msg = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error.response.data.error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this);\n\n        setgender(msg);\n      } else if (error.response.data.error.message === \"password length must be at least 8 characters long\") {\n        const msg = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error.response.data.error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this);\n\n        setpass(msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: handleShow,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tt\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: icn,\n          alt: \"dfdsf\",\n          height: \"100\",\n          width: \"120\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: icns,\n          alt: \"dfdsf\",\n          height: \"70\",\n          width: \"90\",\n          className: \"ml-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center loo\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"mdl\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"formm\",\n          onSubmit: handleRegister,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"fullname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"inpt\",\n              onChange: handleChange,\n              name: \"fullname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"No phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              className: \"inpt\",\n              name: \"nophone\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), gender, /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"gender\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"--\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"male\",\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"female\",\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"inpt\",\n              name: \"address\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              className: \"inpt\",\n              name: \"email\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              className: \"inpt\",\n              onChange: handleChange,\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), alert && alert, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modbtn\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center here\",\n            children: [\"Dont have an Account? Klik\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Here \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(RegisterMod, \"Tic3nQ17VWnS62PnKhTbUfZHsXI=\");\n\n_c = RegisterMod;\nexport default RegisterMod;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterMod\");","map":{"version":3,"sources":["/home/usermint/Desktop/dewetours/client/src/components/modals/RegisterMod.jsx"],"names":["React","useState","Modal","Form","Alert","icn","icns","swal","API","RegisterMod","handleClose","handleShow","alert","setalert","gender","setgender","pass","setpass","getUser","datas","localStorage","getItem","JSON","parse","datausers","setdatausers","form","setform","fullname","nophone","address","email","password","handleChange","e","target","name","value","handleRegister","preventDefault","config","headers","body","stringify","response","post","console","log","status","msg","error","data","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Form, Alert } from \"react-bootstrap\";\nimport \"./modals.css\";\nimport icn from \"../../assets/icons/l2.png\";\nimport icns from \"../../assets/icons/l1.png\";\nimport swal from \"sweetalert\";\nimport { API } from \"../../config/api\";\n\nfunction RegisterMod({ handleClose, handleShow }) {\n  const [alert, setalert] = useState(null);\n  const [gender, setgender] = useState(null);\n  const [pass, setpass] = useState(null);\n  function getUser() {\n    let datas = localStorage.getItem(\"users\");\n    if (datas) {\n      return JSON.parse(datas);\n    } else {\n      return [];\n    }\n  }\n\n  const [datausers, setdatausers] = useState(getUser());\n\n  const [form, setform] = useState({\n    fullname: \"\",\n    nophone: \"\",\n    gender: \"\",\n    address: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setform({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const body = JSON.stringify(form);\n\n      const response = await API.post(\"/signup\", body, config);\n      console.log(response);\n      if (response?.status === 200) {\n        const msg = <Alert variant=\"success\">Register is Success!</Alert>;\n        setalert(msg);\n      }\n    } catch (error) {\n      console.log(error.response.data);\n\n      if (error.response.data.message) {\n        const msg = <Alert variant=\"danger\">Email is Already</Alert>;\n        setalert(msg);\n      } else if (\n        error.response.data.error.message ===\n        '\"gender\" is not allowed to be empty'\n      ) {\n        const msg = (\n          <Alert variant=\"danger\">{error.response.data.error.message}</Alert>\n        );\n        setgender(msg);\n      } else if (\n        error.response.data.error.message ===\n        \"password length must be at least 8 characters long\"\n      ) {\n        const msg = (\n          <Alert variant=\"danger\">{error.response.data.error.message}</Alert>\n        );\n        setpass(msg);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Modal show={handleShow} onHide={handleClose}>\n        <div className=\"tt\">\n          <img src={icn} alt=\"dfdsf\" height=\"100\" width=\"120\" />\n          <img\n            src={icns}\n            alt=\"dfdsf\"\n            height=\"70\"\n            width=\"90\"\n            className=\"ml-auto\"\n          />\n        </div>\n\n        <p className=\"text-center loo\">Sign up</p>\n        <Modal.Body className=\"mdl\">\n          <Form className=\"formm\" onSubmit={handleRegister}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>fullname</Form.Label>\n              <Form.Control\n                type=\"text\"\n                className=\"inpt\"\n                onChange={handleChange}\n                name=\"fullname\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>No phone</Form.Label>\n              <Form.Control\n                type=\"number\"\n                className=\"inpt\"\n                name=\"nophone\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>Gender</Form.Label>\n              {gender}\n              <Form.Control as=\"select\" name=\"gender\" onChange={handleChange}>\n                <option>--</option>\n                <option value=\"male\">Male</option>\n                <option value=\"female\">Female</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                className=\"inpt\"\n                name=\"address\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                className=\"inpt\"\n                name=\"email\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                className=\"inpt\"\n                onChange={handleChange}\n                name=\"password\"\n              />\n            </Form.Group>\n            {alert && alert}\n            <button className=\"modbtn\" type=\"submit\">\n              Register\n            </button>\n            <p className=\"text-center here\">\n              Dont have an Account? Klik{\" \"}\n              <span>\n                <strong>Here </strong>{\" \"}\n              </span>{\" \"}\n            </p>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default RegisterMod;\n"]},"metadata":{},"sourceType":"module"}